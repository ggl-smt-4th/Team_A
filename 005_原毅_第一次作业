pragma solidity ^0.4.14;

contract Payroll {
    uint constant payDuration = 10 seconds;
    
    address owner;
    uint salary = 1 ether;
    address employee;
    uint lastPayday = now ;
    
    function Payroll() {
        owner = msg.sender;
        
    }
    
    function updateEmployee(address e) {
        
        if (employee != owner) {
            revert();
        }
        
        employee = e;
        
        
    }
    
    function updateSalary(uint s) {
        if (msg.sender != owner) {
        revert();
        
        }
        
        salary = s;
        
    
    }
    
    function addfund() payable returns (uint) {
        return this.balance;
    }
    
    function calculateRunway() returns (uint) {
        return this.balance / salary;
    }
    
    function hasEnoughFund() returns (bool) {
        return calculateRunway() > 0;
    
    }
    
    function getPaid() {
        if (msg.sender != employee) {
            revert();
            
        }
        
        uint nextPayDay = lastPayday + payDuration; 
        if (nextPayDay > now) {
            revert();
            
        }
        
        lastPayday = nextPayDay;
        employee.transfer(salary);
       
    }
}
